generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id         Int                 @id @default(autoincrement())
  title      String
  categories CategoriesOnPosts[]
}

model Category {
  id    Int                 @id @default(autoincrement())
  name  String
  posts CategoriesOnPosts[]
}

model CategoriesOnPosts {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int // relation scalar field (used in the `@relation` attribute above)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([postId, categoryId])
}


// CREATE TABLE "Post" (
//     "id" SERIAL NOT NULL,
//     "title" TEXT NOT NULL,

//     CONSTRAINT "Post_pkey" PRIMARY KEY ("id")
// );

// CREATE TABLE "Category" (
//     "id" SERIAL NOT NULL,
//     "name" TEXT NOT NULL,

//     CONSTRAINT "Category_pkey" PRIMARY KEY ("id")
// );


// -- Relation table + indexes --

// CREATE TABLE "CategoriesOnPosts" (
//     "postId" INTEGER NOT NULL,
//     "categoryId" INTEGER NOT NULL,
//     "assignedAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,

//     CONSTRAINT "CategoriesOnPosts_pkey" PRIMARY KEY ("postId","categoryId")
// );

// ALTER TABLE "CategoriesOnPosts" ADD CONSTRAINT "CategoriesOnPosts_postId_fkey" FOREIGN KEY ("postId") REFERENCES "Post"("id") ON DELETE RESTRICT ON UPDATE CASCADE;
// ALTER TABLE "CategoriesOnPosts" ADD CONSTRAINT "CategoriesOnPosts_categoryId_fkey" FOREIGN KEY ("categoryId") REFERENCES "Category"("id") ON DELETE RESTRICT ON UPDATE CASCADE;